buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
    }
}
plugins {
    id "org.sonarqube" version "3.1.1"
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven-publish'


version = "${version}"
group = 'cy.jdkdigital.productivebees'
archivesBaseName = 'productivebees'

java.toolchain.languageVersion = JavaLanguageVersion.of(8) // Mojang ships Java 8 to end users, so your mod should target Java 8.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: '1.16.5'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                productivebees {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                productivebees {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'productivebees', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                productivebees {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
// sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url "https://www.cursemaven.com"
    }
    flatDir {
        dirs 'mods'
    }
    maven {
        url 'https://www.dogforce-games.com/maven/'
    }
    maven {
        name = "JEI Maven"
        url "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        url 'https://maven.blamejared.com'
    }
    maven { // TOP
        name 'tterrag maven'
        url "http://maven.tterrag.com/"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${forgeversion}"

    // compile against the JEI API but do not include it at runtime
    compileOnly fg.deobf("mezz.jei:jei-${jei_version}:api")
    // at runtime, use the full JEI jar
    runtimeOnly fg.deobf("mezz.jei:jei-${jei_version}")

    compileOnly fg.deobf ("mcjty.theoneprobe:TheOneProbe-${top_version}:api")
    runtime fg.deobf ("mcjty.theoneprobe:TheOneProbe-${top_version}")

    compileOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}:api")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}")

    implementation fg.deobf("curse.maven:jade-324717:3228325")
    implementation fg.deobf("curse.maven:applied-energistics-2-223794:3502523")
    implementation fg.deobf("curse.maven:blood-magic-224791:3477631")
    implementation fg.deobf("curse.maven:mekanism-268560:3206392")
    implementation fg.deobf("curse.maven:mekanism-generators-268566:3206395")
    implementation fg.deobf("curse.maven:mantle-74924:3439180")
    implementation fg.deobf("curse.maven:tinkers-construct-74072:3439200")
    implementation fg.deobf("curse.maven:cyclops-core-232758:3292066")
    implementation fg.deobf("curse.maven:curios-309927:3275653")
    implementation fg.deobf("curse.maven:observerlib-316833:3320850")
    implementation fg.deobf("curse.maven:cofh-core-69162:3621734")
    implementation fg.deobf("curse.maven:thermal-foundation-222880:3621736")
    implementation fg.deobf("curse.maven:thermal-expansion-69163:3607549")
    implementation fg.deobf("curse.maven:cucumber-272335:3249370")
    implementation fg.deobf("curse.maven:immersive-engineering-231951:3377691")
    implementation fg.deobf("curse.maven:titanium-287342:3346366")
    implementation fg.deobf("curse.maven:industrial-foregoing-266515:3446262")
    implementation fg.deobf("curse.maven:mgui-351914:3456505")
    implementation fg.deobf("curse.maven:tetra-289712:3456516")
    implementation fg.deobf("curse.maven:the-bumblezone-forge-362479:3487994")
    implementation fg.deobf("curse.maven:create-328085:3419412")
    implementation fg.deobf("curse.maven:flywheel-486392:3459739")
    implementation fg.deobf("curse.maven:create-stuff-additions-466792:3478969")
    implementation fg.deobf("curse.maven:createaddition-439890:3476770")
    implementation fg.deobf("curse.maven:geckolib-388172:3502622")
    implementation fg.deobf("curse.maven:libx-412525:3329216")
    implementation fg.deobf("curse.maven:feywild-484377:3504051")
    implementation fg.deobf("curse.maven:corail-tombstone-243707:3498172")
    implementation fg.deobf("curse.maven:item-filters-forge-309674:3376819")
    implementation fg.deobf("curse.maven:architectury-forge-419699:3577751")
    implementation fg.deobf("curse.maven:ftb-teams-forge-404468:3535953")
    implementation fg.deobf("curse.maven:ftb-library-forge-404465:3553840")
    implementation fg.deobf("curse.maven:ftb-quests-forge-289412:3575814")
    implementation fg.deobf("curse.maven:forestry-59751:3616694")
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                "Specification-Title": "Productive Bees",
                "Specification-Vendor": "productivebees",
                "Specification-Version": "1.0", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"productivebees",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "JDKDigital_productive-bees"
        property "sonar.organization", "jdkdigital"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}